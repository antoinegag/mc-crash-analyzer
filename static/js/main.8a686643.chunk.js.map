{"version":3,"sources":["components/UploadCrashReport.js","util/parseCrashlog.js","components/NavBar.js","components/InfoBubble.js","components/CrashResult.js","App.js","serviceWorker.js","index.js"],"names":["UploadCrashReport","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","file","fileReader","FileReader","handleFileChosen","bind","assertThisInitialized","handleFileRead","e","onData","currentTarget","result","onloadend","readAsText","_this2","react_default","a","createElement","Badge","color","type","id","className","onChange","target","files","React","PureComponent","headers","CRASH_REPORT","SYSTEM_DETAILS","indexes","RANDOM_MESSAGE","TIME","DESCRIPTION","ERROR_STACK_TRACE","COMMENT_REGEX","NavBar","toggle","isOpen","setState","Navbar","dark","expand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","Button","onNew","NavLink","href","Component","InfoBubble","_ref","tooltip","objectWithoutProperties","uniqueId","UncontrolledTooltip","placement","ErrorInfo","data","description","error","possibleCause","stackHead","SystemDetails","_ref2","details","minecraftVersion","javaVersion","components_InfoBubble","operatingSystem","memory","used","available","max","CrashResult","time","randomMessage","systemDetails","fullStackTrace","App","handleCrashLogUpload","parsed","crashlog","lines","split","length","Error","index","match","errorClassPath","slice","join","memoryInfo","parseCrashlog","toast","Fragment","NavBar_NavBar","UncontrolledAlert","rel","Container","components_CrashResult","components_UploadCrashReport","react_toastify","position","POSITION","TOP_CENTER","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a686643.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Badge } from \"reactstrap\";\nclass UploadCrashReport extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: null\n    };\n\n    this.fileReader = new FileReader();\n\n    this.handleFileChosen = this.handleFileChosen.bind(this);\n    this.handleFileRead = this.handleFileRead.bind(this);\n  }\n\n  handleFileRead(e) {\n    const { onData } = this.props;\n    if (onData) {\n      onData(e.currentTarget.result);\n    }\n  }\n\n  handleFileChosen(file) {\n    if (!file) return;\n    const fileReader = new FileReader();\n    fileReader.onloadend = this.handleFileRead;\n    fileReader.readAsText(file);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Upload crash report <Badge color=\"info\">Beta</Badge>\n        </h1>\n        <br />\n        <input\n          type=\"file\"\n          id=\"crashlog-input\"\n          className=\"input-file\"\n          onChange={e => this.handleFileChosen(e.target.files[0])}\n        />\n      </div>\n    );\n  }\n}\n\nexport default UploadCrashReport;\n","const headers = {\n  CRASH_REPORT: \"---- Minecraft Crash Report ----\",\n  SYSTEM_DETAILS: \"-- System Details --\"\n};\n\n// Constant index where some data is in the crashlog\nconst indexes = {\n  RANDOM_MESSAGE: 1,\n  TIME: 3,\n  DESCRIPTION: 4,\n  ERROR_STACK_TRACE: 6\n};\n\nconst COMMENT_REGEX = /\\/\\/ (.*)/;\n\nfunction findPossibleCause(error) {\n  if (error.match(\"OutOfMemoryError\")) {\n    return \"Ran out of RAM, allocate more memory to Minecraft\";\n  }\n\n  return \"Unknown\";\n}\n\n// TODO: refactor this mess\nexport function parseCrashlog(crashlog) {\n  const lines = crashlog.split(\"\\n\");\n\n  if (lines.length < 1 || lines[0] !== headers.CRASH_REPORT) {\n    throw new Error(\"Invalid crashlog\");\n  }\n\n  let index = 0;\n  const data = {};\n\n  data.randomMessage = lines[indexes.RANDOM_MESSAGE].match(COMMENT_REGEX)[1];\n  data.time = lines[indexes.TIME].match(/Time: (.*)/)[1];\n  data.description = lines[indexes.DESCRIPTION].match(/Description: (.*)/)[1];\n\n  // Parse error stack trace\n  index = indexes.ERROR_STACK_TRACE;\n  data.error = lines[index];\n  data.possibleCause = findPossibleCause(data.error);\n  index++;\n  data.stackHead = lines[index];\n  data.errorClassPath = data.stackHead.match(/at (.*?)\\(/)[1];\n  do {\n    index++;\n  } while (lines[index] !== \"\");\n\n  data.fullStackTrace = lines\n    .slice(indexes.ERROR_STACK_TRACE, index)\n    .join(\"\\n\");\n\n  // Move to system details\n  while (lines[index] !== headers.SYSTEM_DETAILS) {\n    index++;\n  }\n  index += 2; // Skip \"Details\"\n\n  const systemDetails = {\n    minecraftVersion: lines[index].match(/Minecraft Version: (.*)/)[1],\n    operatingSystem: lines[index + 1].match(/Operating System: (.*)/)[1],\n    javaVersion: lines[index + 2].match(/Java Version: (.*)/)[1]\n  };\n  index += 4;\n\n  const memoryInfo = lines[index].match(/Memory: (.*?) \\/ (.*?)up to (.*)/);\n  systemDetails.memory = {\n    used: memoryInfo[1],\n    available: memoryInfo[2],\n    max: memoryInfo[3]\n  };\n\n  data.systemDetails = systemDetails;\n  return data;\n}\n","import React from \"react\";\nimport {\n  Button,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\n\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"md\">\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav>\n              <NavItem>\n                <Button onClick={this.props.onNew} color=\"success\">\n                  New crashlog <i className=\"ml-2 fas fa-plus\" />\n                </Button>\n              </NavItem>\n            </Nav>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"https://github.com/antoinegag/mc-crash-analyzer\">\n                  <i className=\"fab fa-github mr-2\" />\n                  GitHub\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { uniqueId } from \"lodash\";\nimport { UncontrolledTooltip } from \"reactstrap\";\n\nfunction InfoBubble({ tooltip, ...props }) {\n  const id = uniqueId(\"infobubble-\");\n  return (\n    <span {...props}>\n      <i id={id} className=\"fas fa-question-circle\" />\n      <UncontrolledTooltip placement=\"top\" target={id}>\n        {tooltip}\n      </UncontrolledTooltip>\n    </span>\n  );\n}\n\nexport default InfoBubble;\n","import React from \"react\";\nimport InfoBubble from \"./InfoBubble\";\n\nfunction ErrorInfo({ data }) {\n  return (\n    <div>\n      <h2>\n        <i className=\"fas fa-bug pr-2\" />\n        Error information\n      </h2>\n      <p>{data.description}</p>\n\n      <div className=\"pb-3\">\n        <h4>Error</h4>\n        <code>{data.error}</code>\n      </div>\n      <div>\n        <h4>Possible cause</h4>\n        <p>{data.possibleCause}</p>\n      </div>\n      <div>\n        <h4>Location</h4>\n        <p>\n          This is where the error happened, if you recognize a mod name, it is\n          probably at fault.\n        </p>\n        <code>{data.stackHead}</code>\n      </div>\n    </div>\n  );\n}\n\nfunction SystemDetails({ details }) {\n  return (\n    <div>\n      <h2>\n        <i className=\"fas fa-microchip pr-2\" />\n        System details\n      </h2>\n      <h4>Minecraft version</h4>\n      <p>{details.minecraftVersion}</p>\n      <h4>Java version</h4>\n      <p>\n        {details.javaVersion}\n        <InfoBubble\n          tooltip=\"Make sure to have a compatible Java version (typically Java 8)\"\n          className=\"pl-2\"\n        />\n      </p>\n      <h4>Operating system</h4>\n      <p>{details.operatingSystem}</p>\n      <h4>Memory</h4>\n      <p>Used: {details.memory.used}</p>\n      <p>Available: {details.memory.available}</p>\n      <p>Max: {details.memory.max}</p>\n    </div>\n  );\n}\n\nfunction CrashResult(props) {\n  const { data } = props;\n\n  return (\n    <div className=\"pt-5\">\n      <h1>Crash report</h1>\n      <p className=\"lead\">{data.time}</p>\n      <span className=\"text-muted\">{data.randomMessage}</span>\n      <hr className=\"my-3\" />\n      <ErrorInfo data={data} />\n      <hr className=\"my-3\" />\n      <SystemDetails details={data.systemDetails} />\n      <hr className=\"my-3\" />\n      <h2>Full stack trace</h2>\n      <p className=\"lead\">Data for developers</p>\n      <pre>\n        <code>{data.fullStackTrace}</code>\n      </pre>\n    </div>\n  );\n}\n\nexport default CrashResult;\n","import React from \"react\";\nimport { Container, UncontrolledAlert } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport UploadCrashReport from \"./components/UploadCrashReport\";\nimport { parseCrashlog } from \"./util/parseCrashlog\";\nimport NavBar from \"./components/NavBar\";\nimport CrashResult from \"./components/CrashResult\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: null\n    };\n\n    this.handleCrashLogUpload = this.handleCrashLogUpload.bind(this);\n  }\n\n  handleCrashLogUpload(data) {\n    let parsed;\n    try {\n      parsed = parseCrashlog(data);\n    } catch (error) {\n      toast.error(\"Something went wrong reading your crash report\");\n    }\n\n    this.setState({ data: parsed });\n  }\n\n  render() {\n    const { data } = this.state;\n\n    return (\n      <>\n        <NavBar onNew={() => this.setState({ data: null })} />\n        <UncontrolledAlert color=\"info\">\n          This is a beta version, please report all issues{\" \"}\n          <a\n            className=\"alert-link\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/antoinegag/mc-crash-analyzer/issues\"\n          >\n            here\n          </a>\n        </UncontrolledAlert>\n        <Container>\n          {data ? (\n            <CrashResult data={data} />\n          ) : (\n            <div className=\"text-center mt-5\">\n              <UploadCrashReport onData={this.handleCrashLogUpload} />\n            </div>\n          )}\n        </Container>\n        <ToastContainer position={toast.POSITION.TOP_CENTER} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}